"""
                .__  .__          __
__  _  _______  |  | |  |   _____/  |_
\ \/ \/ /\__  \ |  | |  | _/ __ \   __\
 \     /  / __ \|  |_|  |_\  ___/|  |
  \/\_/  (____  /____/____/\___  >__|
              \/               \/
                                     by Commit404 & salobchyanskiy
"""

# –ò–º–ø–æ—Ä—Ç—ã / Imports
import requests
import time
import copy
import random
import os
import json
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import Message
import logging
import sqlite3
from config import token, admin
from keyboards import kb_menu, btn_wallet, btn_market, btn_donate, \
    kb_wallet, btn_top_up, btn_withdraw, \
    kb_referrals, btn_referrals, \
    kb_notifications, btn_notifications, \
    kb_donate, btn_donate, \
    kb_market, btn_market, \
    kb_settings, btn_settings, \
    kb_admin, btn_mailing # –ò–º–ø–æ—Ä—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –∫–Ω–æ–ø–æ–∫



client = Bot(token=token)
dp = Dispatcher(client)


logging.basicConfig(level=logging.INFO)
storage = MemoryStorage()
bot = Bot(token)
dp = Dispatcher(bot, storage=storage)



# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ / Welcome
@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.reply(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –Ø *Crimson Coalition Wallet* - –ú—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã–π –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫ –≤ Telegram."
        f" –ü–æ–∫—É–ø–∞–π—Ç–µ, –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ, —Ö—Ä–∞–Ω–∏—Ç–µ –∏ –ø–ª–∞—Ç–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π –∫–æ–≥–¥–∞ —Ö–æ—Ç–∏—Ç–µ."
        f" –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª @CrimsonCoalition üí∞"
        f"\n–í–∞—à –º—É–ª—å—Ç–∏–≤–∞–ª—é—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ —Å–æ–∑–¥–∞–Ω –∏ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π üõ†", reply_markup=kb_menu)


# Wallet / –ö–æ—à–µ–ª–µ–∫
@dp.message_handler(commands=["wallet"])
async def wallet_command(message: types.Message):
    await message.reply(f"{message.from_user.full_name}, —ç—Ç–æ –≤–∞—à —Å—á–µ—Ç:", reply_markup=kb_wallet)


# Settings / –ù–∞—Å—Ç—Ä–æ–π–∫–∏
@dp.message_handler(commands=["settings"])
async def settings_command(message: types.Message):
    await message.reply(f"{message.from_user.full_name}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:", reply_markup=kb_settings)


# Donate / –î–æ–Ω–∞—Ç
@dp.message_handler(commands=["donate"])
async def donate_command(message: types.Message):
    await message.reply(
        f"{message.from_user.full_name}, –º—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Ä–∞–∑–≤–∏—Ç–∏–µ–º —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å—Ç–∞—Ä–∞–µ–º—Å—è –¥–µ–ª–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —ç—Ç–æ—Ç –∫–æ—à–µ–ª–µ–∫ - –æ—Ç–ø—Ä–∞–≤—å –ª—é–±—É—é —Å—É–º–º—É –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –Ω–∞ –∫–æ—Ñ–µ:",
        reply_markup=kb_donate)


# Admin / –ê–¥–º–∏–Ω–∫–∞
@dp.message_handler(commands=["admin"])
async def adm_start_command(message: types.Message):
    if message.from_user.id == admin:
        await message.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω-–ü–∞–Ω–µ–ª—å!', reply_markup=kb_admin)
    else:
        await message.reply(f"{message.from_user.full_name}, —Ç—ã –Ω–µ –∞–¥–º–∏–Ω")

# Market / –ú–∞—Ä–∫–µ—Ç
@dp.message_handler(commands=["market"])
async def market_command(message: types.Message):
    await message.reply(
        "üí† –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É –∏–ª–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∫–æ—à–µ–ª—ë–∫.")


# –î–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ
if __name__ == '__main__':
    executor.start_polling(dp)
